name: 'Mirror image'
on:
  issues:
    types:
    - labeled

env:
  REPO_OWNER: mk8s
  REPO_NAME: mirror-workflow

jobs:
  mirror:
    runs-on: ubuntu-latest

    permissions:
      issues: write

    steps:
    - name: check issue
      id: checkIssue
      uses: actions/github-script@v6.0.0
      with:
        script: |
          const fs = require('fs')
          const event = JSON.parse(fs.readFileSync(process.env.GITHUB_EVENT_PATH, "utf8"))

          if (event.issue && event.action === "labeled") {
              if (event.issue.state != "open") {
                  console.log("not open") // DEBUG
                  exit(0);
              }

              if (event.issue.user.login != "paxnil") {
                  console.log("not by owner") // DEBUG
                  exit(0);
              }

              let labels = event.issue.labels.map(l => l.name)
              if (labels.indexOf("mirror-request") == -1) {
                  console.log("not a mirror-request issue") // DEBUG
                  exit(0);
              }

              let num = event.issue.number

              if (labels.indexOf("work-in-progress") == -1) {
                  await github.rest.issues.createComment({
                      owner: process.env.REPO_OWNER,
                      repo: process.env.REPO_NAME,
                      issue_number: num,
                      body: 'Handled by [Action #${{ github.run_id }}](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})',
                  })

                  let src = event.issue.title

                  let bodyMatch = (event.issue.body || '').match(/^Image-Name: (\S+)$/m)
                  let dst = bodyMatch ? (bodyMatch[1] + ':' + src.match(/[^:]+$/)[0]) : src.match(/[^/]+:.+$/)[0]
                  await github.rest.issues.addLabels({
                      owner: process.env.REPO_OWNER,
                      repo: process.env.REPO_NAME,
                      issue_number: num,
                      labels: [ "work-in-progress" ],
                  })
                  core.setOutput('MIRROR_SRC', src)
                  core.setOutput('MIRROR_DST', dst)
                  core.setOutput('CHECKED', true)
              }
          }

    - name: Log in to quay.io
      if: steps.checkIssue.outputs.CHECKED
      uses: docker/login-action@v1
      with:
        registry: quay.io
        username: ${{ secrets.QUAY_USERNAME }}
        password: ${{ secrets.QUAY_PASSWORD }}
    - name: Log in to Docker Hub
      if: steps.checkIssue.outputs.CHECKED
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: pull and push
      if: steps.checkIssue.outputs.CHECKED
      shell: bash
      run: |
        docker pull ${{ steps.checkIssue.outputs.MIRROR_SRC }}
        docker tag ${{ steps.checkIssue.outputs.MIRROR_SRC }} quay.io/mk8s/${{ steps.checkIssue.outputs.MIRROR_DST }}
        docker push quay.io/mk8s/${{ steps.checkIssue.outputs.MIRROR_DST }}
        docker tag ${{ steps.checkIssue.outputs.MIRROR_SRC }} hyperk8s/${{ steps.checkIssue.outputs.MIRROR_DST }}
        docker push hyperk8s/${{ steps.checkIssue.outputs.MIRROR_DST }}

    - name: close issue
      if: steps.checkIssue.outputs.CHECKED
      uses: actions/github-script@v6.0.0
      with:
        script: |
          const fs = require('fs')
          const event = JSON.parse(fs.readFileSync(process.env.GITHUB_EVENT_PATH, "utf8"))

          let num = event.issue.number

          await github.rest.issues.createComment({
              owner: process.env.REPO_OWNER,
              repo: process.env.REPO_NAME,
              issue_number: num,
              body: `Pushed as:
                     * \`quay.io/mk8s/${{ steps.checkIssue.outputs.MIRROR_DST }}\`
                     * \`hyperk8s/${{ steps.checkIssue.outputs.MIRROR_DST }}\``,
          })
          await github.rest.issues.removeLabel({
              owner: process.env.REPO_OWNER,
              repo: process.env.REPO_NAME,
              issue_number: num,
              name: "work-in-progress",
          })
          await github.rest.issues.update({
              owner: process.env.REPO_OWNER,
              repo: process.env.REPO_NAME,
              issue_number: num,
              state: 'closed',
          })

